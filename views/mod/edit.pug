extends ../layout

append alerts
    include deletion-alert

block content
    section.mt-4.mb-5.mx-1
        .card.mb-3
            .card-body
                h5.card-title= 'Edit ' + mod.title
                form(method='post' action='/mods/' + mod.id + '/edit').big-form
                    .form-group
                        label(for='title') Title
                        input(type='text' placeholder='Mod Title' name='title' maxlength='255' value=formContents.title required).form-control#title
                    .form-group
                        label(for='id') URL Slug #[small.text-muted (formerly ID)]
                        input(type='text' placeholder='mod-slug' name='id' aria-describedby='idHelp' maxlength='64' value=mod.id disabled='disabled').form-control#id
                        small.text-muted#idHelp The slug is a short unique text that will be in the url of the mod, i.e. #[code #{baseUrl}/mods/#[u=mod.id]]. It may only contain lowercase letters, numbers, dashes, dots and underscores. Slugs can not contain just numbers and can not be longer than 64 characters.
                    .form-group
                        label(for='update-url') Update URL
                        .input-group
                            input(type='url' aria-describedby='updateUrlHelp' value=`${baseUrl}/api/v1/mods/${mod.id}/version.txt` readonly).form-control#update-url
                            .input-group-append
                                button(type='button').btn.btn-outline-primary#update-url-copy-button Copy
                        small.text-muted#updateUrlHelp You can use this URL in the #[code ModVersionCheckUrl] attribute in your mod to enable update checking.
                    .form-group
                        label(for='description') Description
                        input(type='text' placeholder='Short description for your mod.' name='description' maxlength='255' value=formContents.description required).form-control#description
                    .form-group
                        label(for='banner') Banner image URL
                        input(type='url' placeholder='https://example.com/imagename.png' name='bannerImageUrl' aria-describedby='bannerHelp' value=formContents.bannerImageUrl).form-control#banner
                        small.text-muted#bannerHelp This image will be used when displaying your mod in the mods directory. The recommended size is 660 x 200 pixels.
                    .form-group
                        label(for='icon') Icon image URL
                        input(type='url' placeholder='https://example.com/imagename.png' name='iconImageUrl' aria-describedby='iconHelp' value=formContents.iconImageUrl).form-control#icon
                        small.text-muted#iconHelp This image will be used when displaying your mod in the discovery tab of the mod loader launcher. It is recommended to use a square image.
                    .form-group
                        label(for='category') Category
                        select(name='category' required).custom-select#category
                            option(value='utility' selected=(formContents.category === 'utility')) Utility
                            option(value='optimization' selected=(formContents.category === 'optimization')) Optimization
                            option(value='content' selected=(formContents.category === 'content')) Content
                            option(value='fun' selected=(formContents.category === 'fun')) Fun
                    .form-group
                        label(for='readme-input') Readme
                        textarea(placeholder='Explain what your mod is about and how to use it using markdown.' name='readme' rows='10' required).form-control#readme-input=formContents.readme
                    .form-group
                        label(for='repository') Source code repository URL
                        input(type='url' placeholder='https://github.com/path/to/repository' name='repositoryUrl' aria-describedby='repositoryHelp' value=formContents.repositoryUrl).form-control#repository
                        small.text-muted#repositoryHelp Can be left out.
                    hr
                    input(type='submit' value='Submit changes').btn.btn-success
                    button(type='button' data-toggle='collapse' data-target='#preview' aria-expanded='false' aria-controls='preview').mx-1.btn.btn-outline-primary Preview mod page
                    a(href='/mods/' + mod.id).btn.btn-outline-danger Discard changes
    include ../mod-preview
    section.my-5.mx-1
        .card.mb-3.border-danger
            .card-body
                h5.card-title Danger zone
                    | 
                    button(type='button' data-toggle='collapse' data-target='#danger-zone' aria-expanded='false' aria-controls='danger-zone').btn.btn-sm.float-right.btn-outline-danger Click to expand
                .collapse#danger-zone
                    form(method='post' action='/mods/' + mod.id + '/edit')#transferForm.big-form
                        .form-group
                            label(for='changeOwner') Transfer this mod to another owner
                            input(type='text' placeholder='username' name='changeOwner' aria-describedby='changeOwnerHelp' value='').form-control#changeOwner
                            small.text-muted#changeOwnerHelp Enter the username of the new owner.
                        input(type='button' value='Transfer mod' data-toggle='modal' data-target='#confirmModal' data-action='transfer').btn.btn-danger
                    hr
                    if modDeletion
                        | This mod is scheduled to be deleted in #[b=daysLeft + ' days'] and is not publicly visible anymore.
                        form(method='post' action=`/mods/${mod.id}/edit`).inline-form.d-inline.mx-2
                            input(type='hidden' name='action' value='cancel-deletion')
                            button(type='submit' value='Cancel deletion').btn.btn-outline-warning.btn-sm Cancel deletion
                    else
                        form(method='post' action='/mods/' + mod.id + '/edit')#deleteForm.big-form
                            .form-group
                                label(for='deleteMod') Delete this mod
                                input(type='text' placeholder=mod.id name='deleteMod' aria-describedby='deleteModHelp' value='').form-control#deleteMod
                                small.text-muted#deleteModHelp Enter the id of this mod to begin the deletion process. The mod will be deleted after #{deletionInterval} days, unless you cancel the deletion. Mods can not be restored once the deletion is complete.
                            input(type='button' value='Delete mod' data-toggle='modal' data-target='#confirmModal' data-action='delete').btn.btn-danger
        ul
            li You can edit the changelogs of this mod on it's #[a(href=`/mods/${mod.id}/versions`) versions page]
            li #[a(href=`/mods/${mod.id}`) Go back to the mod's page]
            li Want to publish an update for this mod? #[a(href=`/mods/${mod.id}/addversion`) Add a new version]

    div(tabindex='-1' role='dialog' aria-labelledby='confirmModalLabel' aria-hidden='true').modal.fade#confirmModal
        div(role='document').modal-dialog.modal-dialog-centered
            .modal-content.border-0
                .modal-header.border-bottom-0
                    h5.modal-title#confirmModalLabel Are you sure?
                    button(type='button' data-dismiss='modal' aria-label='Close').close
                        span(aria-hidden='true') &times;
                .modal-body #[span#confirmModalText] 
                    | Only press continue if you know what you are doing!
                .modal-footer.border-top-0
                    button(type='button')#confirmModalRedButton.btn.btn-outline-danger.btn-danger I know what I am doing, continue
                    button(type='button' data-dismiss='modal').btn.btn-success I've changed my mind
    script.
        var modalTargetForm;
        $("#confirmModal").on("show.bs.modal", function(event) {
            var button = $(event.relatedTarget);
            var action = button.data("action");
            var text;
            switch (action) {
                case "transfer":
                    modalTargetForm = $("#transferForm");
                    text = "You are about to transfer this mod to another user. This means that you will not be able to edit this mod again.";
                    break;
                case "delete":
                    modalTargetForm = $("#deleteForm");
                    text = "You are about to delete this mod. This means that it will be removed from our database. This action is irreversible!";
                    break;
                default:
                    modalTargetForm = undefined;
                    text = "We don't know what you did but somehow you are about to do something dangerous! Be careful!";
                    break;
            }
            $("#confirmModalText").text(text);
        });
        $("#confirmModalRedButton").click(function() {
            modalTargetForm.submit();
        });
        $("#update-url-copy-button").click(function() {
            // based on https://stackoverflow.com/a/30810322/5424404
            if (!navigator.clipboard) {
                $("#update-url").focus();
                $("#update-url").select();
                try {
                    var success = document.execCommand('copy');
                    console.log('Copying update-url using fallback method was ' + (success ? 'successful.' : 'unsuccessful.'));
                } catch (err) {
                    console.error('Could not copy update-url using fallback method: ', err);
                }
                return;
            }
            navigator.clipboard.writeText($("#update-url").val())
                .then(function() {
                    console.log('Copied update-url asynchronously.');
                }, function (err) {
                    console.error('Could not copy update-url asynchronously: ', err);
                });
        });
    link(rel='stylesheet' href='/assets/simplemde/simplemde.min.css')
    script(src='/assets/simplemde/simplemde.min.js')
    script new SimpleMDE({element: document.getElementById('readme-input'), forceSync: true});